local_file.dockerfile: Refreshing state... [id=5aead13d3216b0864b336253920d9e5714423dce]
docker_network.inet1_2: Refreshing state... [id=881ab87c4538109a475d96a33155713f3996e5fc3fd3e1bbfb7a67df0b7d9a7f]
docker_network.inet0_2: Refreshing state... [id=bd4df1c4090942ed2eb16b2efb359f41fbc4d611376351751a1578ef56c09cae]
docker_network.prometheus: Refreshing state... [id=2b2541680a1644257518209c9591f91e8b97bd7bcc4497706f0a82e52c65f863]
docker_network.inet0_1: Refreshing state... [id=7f76972398082195116f688efe469466abbefb294535315f51a9ccb3d65cf495]
docker_image.prometheus: Refreshing state... [id=sha256:dd1ce2099cbd4180c20b87ae5ee0a513fb074290628617ccb5ea004654e826d8ubuntu/prometheus:2.53.3-24.04_stable]
docker_image.router: Refreshing state... [id=sha256:c5e807fc8b7c9b9ad4bc3906f0daea686e13e803bbb75e901ca22853f27087a3router:latest]
docker_container.router2: Refreshing state... [id=d8b406ab1515b5a27a03ed081f35a8e10365fbf662f893483ec2feef4ab5bd03]
docker_container.router0: Refreshing state... [id=f56e893dd0eef7303cef24fc377d88ff7ffc578c2dc70e97d0dfcdaf91d64d74]
docker_container.router1: Refreshing state... [id=19f7094427c3ff8babafb19062ad38bb24b51d79d5d220f06bf022e97efaceef]
local_file.prometheus: Refreshing state... [id=d03bdfa57aae39389e6b9dccfe87dd73558c053d]
docker_container.prometheus: Refreshing state... [id=d6e67e70605d146d2e6b8face998208ee277e94507e9b824f564316e654e6339]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # docker_container.prometheus must be replaced
-/+ resource "docker_container" "prometheus" {
      + bridge                                      = (known after apply)
      ~ command                                     = [] -> (known after apply)
      + container_logs                              = (known after apply)
      - cpu_shares                                  = 0 -> null
      - dns                                         = [] -> null
      - dns_opts                                    = [] -> null
      - dns_search                                  = [] -> null
      ~ entrypoint                                  = [
          - "/usr/bin/pebble",
          - "enter",
        ] -> (known after apply)
      ~ env                                         = [] -> (known after apply)
      + exit_code                                   = (known after apply)
      - group_add                                   = [] -> null
      ~ hostname                                    = "d6e67e70605d" -> (known after apply)
      ~ id                                          = "d6e67e70605d146d2e6b8face998208ee277e94507e9b824f564316e654e6339" -> (known after apply)
      ~ init                                        = false -> (known after apply)
      ~ ipc_mode                                    = "private" -> (known after apply)
      ~ log_driver                                  = "json-file" -> (known after apply)
      - log_opts                                    = {} -> null
      - max_retry_count                             = 0 -> null
      - memory                                      = 0 -> null
      - memory_swap                                 = 0 -> null
        name                                        = "prometheus"
      ~ network_data                                = [
          - {
              - gateway                   = "192.168.10.65"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.69"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:45"
              - network_name              = "prometheus"
            },
        ] -> (known after apply)
      - network_mode                                = "bridge" -> null # forces replacement
      - privileged                                  = false -> null
      - publish_all_ports                           = false -> null
      ~ runtime                                     = "runc" -> (known after apply)
      ~ security_opts                               = [] -> (known after apply)
      ~ shm_size                                    = 64 -> (known after apply)
      + stop_signal                                 = (known after apply)
      ~ stop_timeout                                = 0 -> (known after apply)
      - storage_opts                                = {} -> null
      - sysctls                                     = {} -> null
      - tmpfs                                       = {} -> null
        # (14 unchanged attributes hidden)

        # (3 unchanged blocks hidden)
    }

  # docker_container.router0 must be replaced
-/+ resource "docker_container" "router0" {
      + bridge                                      = (known after apply)
      ~ command                                     = [
          - "./node_exporter",
        ] -> (known after apply)
      + container_logs                              = (known after apply)
      - cpu_shares                                  = 0 -> null
      - dns                                         = [] -> null
      - dns_opts                                    = [] -> null
      - dns_search                                  = [] -> null
      ~ entrypoint                                  = [] -> (known after apply)
      ~ env                                         = [] -> (known after apply)
      + exit_code                                   = (known after apply)
      - group_add                                   = [] -> null
      ~ hostname                                    = "f56e893dd0ee" -> (known after apply)
      ~ id                                          = "f56e893dd0eef7303cef24fc377d88ff7ffc578c2dc70e97d0dfcdaf91d64d74" -> (known after apply)
      ~ init                                        = false -> (known after apply)
      ~ ipc_mode                                    = "private" -> (known after apply)
      ~ log_driver                                  = "json-file" -> (known after apply)
      - log_opts                                    = {} -> null
      - max_retry_count                             = 0 -> null
      - memory                                      = 0 -> null
      - memory_swap                                 = 0 -> null
        name                                        = "router0"
      ~ network_data                                = [
          - {
              - gateway                   = "192.168.10.17"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.18"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:12"
              - network_name              = "inet0_1"
            },
          - {
              - gateway                   = "192.168.10.33"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.35"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:23"
              - network_name              = "inet0_2"
            },
          - {
              - gateway                   = "192.168.10.65"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.67"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:43"
              - network_name              = "prometheus"
            },
        ] -> (known after apply)
      - network_mode                                = "bridge" -> null # forces replacement
      - privileged                                  = false -> null
      - publish_all_ports                           = false -> null
      ~ runtime                                     = "runc" -> (known after apply)
      ~ security_opts                               = [] -> (known after apply)
      ~ shm_size                                    = 64 -> (known after apply)
      + stop_signal                                 = (known after apply)
      ~ stop_timeout                                = 0 -> (known after apply)
      - storage_opts                                = {} -> null
      - tmpfs                                       = {} -> null
      - working_dir                                 = "/usr/local/bin" -> null
        # (15 unchanged attributes hidden)

        # (3 unchanged blocks hidden)
    }

  # docker_container.router1 must be replaced
-/+ resource "docker_container" "router1" {
      + bridge                                      = (known after apply)
      ~ command                                     = [
          - "./node_exporter",
        ] -> (known after apply)
      + container_logs                              = (known after apply)
      - cpu_shares                                  = 0 -> null
      - dns                                         = [] -> null
      - dns_opts                                    = [] -> null
      - dns_search                                  = [] -> null
      ~ entrypoint                                  = [] -> (known after apply)
      ~ env                                         = [] -> (known after apply)
      + exit_code                                   = (known after apply)
      - group_add                                   = [] -> null
      ~ hostname                                    = "19f7094427c3" -> (known after apply)
      ~ id                                          = "19f7094427c3ff8babafb19062ad38bb24b51d79d5d220f06bf022e97efaceef" -> (known after apply)
      ~ init                                        = false -> (known after apply)
      ~ ipc_mode                                    = "private" -> (known after apply)
      ~ log_driver                                  = "json-file" -> (known after apply)
      - log_opts                                    = {} -> null
      - max_retry_count                             = 0 -> null
      - memory                                      = 0 -> null
      - memory_swap                                 = 0 -> null
        name                                        = "router1"
      ~ network_data                                = [
          - {
              - gateway                   = "192.168.10.17"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.19"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:13"
              - network_name              = "inet0_1"
            },
          - {
              - gateway                   = "192.168.10.49"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.50"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:32"
              - network_name              = "inet1_2"
            },
          - {
              - gateway                   = "192.168.10.65"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.68"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:44"
              - network_name              = "prometheus"
            },
        ] -> (known after apply)
      - network_mode                                = "bridge" -> null # forces replacement
      - privileged                                  = false -> null
      - publish_all_ports                           = false -> null
      ~ runtime                                     = "runc" -> (known after apply)
      ~ security_opts                               = [] -> (known after apply)
      ~ shm_size                                    = 64 -> (known after apply)
      + stop_signal                                 = (known after apply)
      ~ stop_timeout                                = 0 -> (known after apply)
      - storage_opts                                = {} -> null
      - tmpfs                                       = {} -> null
      - working_dir                                 = "/usr/local/bin" -> null
        # (15 unchanged attributes hidden)

        # (3 unchanged blocks hidden)
    }

  # docker_container.router2 must be replaced
-/+ resource "docker_container" "router2" {
      + bridge                                      = (known after apply)
      ~ command                                     = [
          - "./node_exporter",
        ] -> (known after apply)
      + container_logs                              = (known after apply)
      - cpu_shares                                  = 0 -> null
      - dns                                         = [] -> null
      - dns_opts                                    = [] -> null
      - dns_search                                  = [] -> null
      ~ entrypoint                                  = [] -> (known after apply)
      ~ env                                         = [] -> (known after apply)
      + exit_code                                   = (known after apply)
      - group_add                                   = [] -> null
      ~ hostname                                    = "d8b406ab1515" -> (known after apply)
      ~ id                                          = "d8b406ab1515b5a27a03ed081f35a8e10365fbf662f893483ec2feef4ab5bd03" -> (known after apply)
      ~ init                                        = false -> (known after apply)
      ~ ipc_mode                                    = "private" -> (known after apply)
      ~ log_driver                                  = "json-file" -> (known after apply)
      - log_opts                                    = {} -> null
      - max_retry_count                             = 0 -> null
      - memory                                      = 0 -> null
      - memory_swap                                 = 0 -> null
        name                                        = "router2"
      ~ network_data                                = [
          - {
              - gateway                   = "192.168.10.33"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.34"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:22"
              - network_name              = "inet0_2"
            },
          - {
              - gateway                   = "192.168.10.49"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.51"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:33"
              - network_name              = "inet1_2"
            },
          - {
              - gateway                   = "192.168.10.65"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "192.168.10.66"
              - ip_prefix_length          = 28
              - ipv6_gateway              = ""
              - mac_address               = "02:42:c0:a8:0a:42"
              - network_name              = "prometheus"
            },
        ] -> (known after apply)
      - network_mode                                = "bridge" -> null # forces replacement
      - privileged                                  = false -> null
      - publish_all_ports                           = false -> null
      ~ runtime                                     = "runc" -> (known after apply)
      ~ security_opts                               = [] -> (known after apply)
      ~ shm_size                                    = 64 -> (known after apply)
      + stop_signal                                 = (known after apply)
      ~ stop_timeout                                = 0 -> (known after apply)
      - storage_opts                                = {} -> null
      - tmpfs                                       = {} -> null
      - working_dir                                 = "/usr/local/bin" -> null
        # (15 unchanged attributes hidden)

        # (3 unchanged blocks hidden)
    }

  # local_file.prometheus must be replaced
-/+ resource "local_file" "prometheus" {
      ~ content              = <<-EOT # forces replacement
            # my global config
            global:
              scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
              evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
              # scrape_timeout is set to the global default (10s).
            
            # Alertmanager configuration
            alerting:
              alertmanagers:
                - static_configs:
                    - targets:
                      # - alertmanager:9093
            
            # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
            rule_files:
              # - "first_rules.yml"
              # - "second_rules.yml"
            
            # A scrape configuration containing exactly one endpoint to scrape:
            # Here it's Prometheus itself.
            scrape_configs:
              # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
              - job_name: "prometheus"
            
                # metrics_path defaults to '/metrics'
                # scheme defaults to 'http'.
            
                static_configs:
                  - targets: ["192.168.10.67:9090","192.168.10.68:9090","192.168.10.66:9090"]
        EOT -> (known after apply) # forces replacement
      ~ content_base64sha256 = "Nj6xICj3Ep/1jfTg/qPGKhkYT+Z+VlK6XcOtZEtlw9w=" -> (known after apply)
      ~ content_base64sha512 = "WQuCO1GgGPQ55C4jkHFmgIHF5AeJbILqkdbznt61g75IXpvJUtvWqv5F3C5ny+8qgTDmcnB1LuAivNpvGsiXIQ==" -> (known after apply)
      ~ content_md5          = "6fa8156816ff4b720fd2d55a7c32af75" -> (known after apply)
      ~ content_sha1         = "d03bdfa57aae39389e6b9dccfe87dd73558c053d" -> (known after apply)
      ~ content_sha256       = "363eb12028f7129ff58df4e0fea3c62a19184fe67e5652ba5dc3ad644b65c3dc" -> (known after apply)
      ~ content_sha512       = "590b823b51a018f439e42e239071668081c5e407896c82ea91d6f39edeb583be485e9bc952dbd6aafe45dc2e67cbef2a8130e67270752ee022bcda6f1ac89721" -> (known after apply)
      ~ id                   = "d03bdfa57aae39389e6b9dccfe87dd73558c053d" -> (known after apply)
        # (3 unchanged attributes hidden)
    }

Plan: 5 to add, 0 to change, 5 to destroy.

Changes to Outputs:
  ~ prometheus_network_addr_list = [
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.67"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:43"
          - network_name              = "prometheus"
        },
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.68"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:44"
          - network_name              = "prometheus"
        },
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.66"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:42"
          - network_name              = "prometheus"
        },
    ] -> (known after apply)
  ~ prometheus_nw                = [
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.69"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:45"
          - network_name              = "prometheus"
        },
    ] -> (known after apply)
  ~ prometheus_targets_addr      = [
      - "\"192.168.10.67:9090\"",
      - "\"192.168.10.68:9090\"",
      - "\"192.168.10.66:9090\"",
    ] -> (known after apply)
  ~ router0_nw                   = [
      - {
          - gateway                   = "192.168.10.17"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.18"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:12"
          - network_name              = "inet0_1"
        },
      - {
          - gateway                   = "192.168.10.33"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.35"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:23"
          - network_name              = "inet0_2"
        },
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.67"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:43"
          - network_name              = "prometheus"
        },
    ] -> (known after apply)
  ~ router1_nw                   = [
      - {
          - gateway                   = "192.168.10.17"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.19"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:13"
          - network_name              = "inet0_1"
        },
      - {
          - gateway                   = "192.168.10.49"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.50"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:32"
          - network_name              = "inet1_2"
        },
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.68"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:44"
          - network_name              = "prometheus"
        },
    ] -> (known after apply)
  ~ router2_nw                   = [
      - {
          - gateway                   = "192.168.10.33"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.34"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:22"
          - network_name              = "inet0_2"
        },
      - {
          - gateway                   = "192.168.10.49"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.51"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:33"
          - network_name              = "inet1_2"
        },
      - {
          - gateway                   = "192.168.10.65"
          - global_ipv6_address       = ""
          - global_ipv6_prefix_length = 0
          - ip_address                = "192.168.10.66"
          - ip_prefix_length          = 28
          - ipv6_gateway              = ""
          - mac_address               = "02:42:c0:a8:0a:42"
          - network_name              = "prometheus"
        },
    ] -> (known after apply)

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
